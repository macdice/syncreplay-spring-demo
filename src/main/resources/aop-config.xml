<?xml version = "1.0" encoding = "UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop = "http://www.springframework.org/schema/aop"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  <!-- Declare the automatic retry advice using Spring Retry.  The policy
       is to retry up to 5 times whenever ConcurrencyFailureException occurs.
       That is the exception to which Spring translates all SQL errors in
       class "40", which includes serialization failures, deadlocks and the
       new "40P02" error introduced by the synchronous replay patch. -->
  <bean id="retryAdvice"
        class="org.springframework.retry.interceptor.RetryOperationsInterceptor">
    <property name="retryOperations" ref="retryTemplate"/>
  </bean>
  <bean id="retryTemplate"
        class="org.springframework.retry.support.RetryTemplate">
    <property name="retryPolicy" ref="retryPolicy"/>
  </bean>
  <bean id="retryPolicy"
        class="org.springframework.retry.policy.SimpleRetryPolicy">
    <constructor-arg value="${demo.retryPolicy.maxAttempts}"/>
    <constructor-arg>
      <map>
        <entry key="org.springframework.dao.ConcurrencyFailureException" value="true"/>
      </map>
    </constructor-arg>
  </bean>

  <!-- Declare the route advice using our custom interceptor.  That does two
       things: (1) pass the readOnly flag from @Transactional(readOnly=X)
       annotations down to the TransactionRouter, and (2) tell the
       TransactionRouter blacklist any database server that raises error 40P02
       for a period of time.  -->
  <bean id="routeAdvice" class="demo.TransactionRoutingInterceptor">
    <constructor-arg ref="dataSource"/>
  </bean>

  <!-- Find all methods marked @Transactional and attach the above advice. -->
  <aop:config>
    <aop:pointcut id="allTransactionalMethods"
                  expression="@annotation(org.springframework.transaction.annotation.Transactional)"/>
    <aop:advisor pointcut-ref="allTransactionalMethods"
                 advice-ref="retryAdvice"
                 order="100"/>
    <aop:advisor pointcut-ref="allTransactionalMethods"
                 advice-ref="routeAdvice"
                 order="200"/>
  </aop:config>
</beans>
